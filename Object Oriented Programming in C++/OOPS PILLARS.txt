There are  four pillars of object-oriented programming.

1.Encapsulation
2.Abstraction
3.Inheritance
4.Polymorphism


Some basic concepts required to understand OOPS:
1. Classes
2. Objects
3. Dynamic Binding  ....(Will cover under virtual functions)
4. Static Binding
5. Message Parsing


Class:-
	Basic building block 
	User defined data type to store data members and member functions
	Blueprint for an object
	

Object :-
	Instance of a class
	Identifiable entity with some characteristics and behavior
	When a class is defined, no memory is allocated 
	But when it is instantiated (i.e. an object is created) memory is allocated.

1]  ENCAPSULATION:   

	Defined as wrapping up data and information under a single unit or class.
	In OOPS, Encapsulation is defined as binding together the data and the functions that manipulate them.
	Encapsulation also leads to data abstraction or data hiding. 
	Using encapsulation also hides the data.
	Achieved by using access specifiers as:
	◉ private   :   private can only be accessed within the same class
	◉ protected :   can be accessed within the same class and by derived classes.
	◉ public    :   can be accessed from anywhere in the program.

	Advantages : Data Protection, Information Hiding and Access Control(using getter and setter methods)

Example :
	 	#include <iostream>
		using namespace std;
	
		class temp{
     			int a;
  			int b;

  			public:
  			int solve(int input){
    			   a=input;
    			   b=a/2;
    			return b;
  		       }
		};

		int main() {
  			int n;
  			cin>>n;
  			temp half;
  			int ans=half.solve(n);
  			cout<<ans<<endl;
			}

2] ABSTRACTION:





