◉ BASIC TERMINILOGIES :-

• Vertical Scaling :
  Upgrading a single server by adding more powerful hardware like CPU and RAM 
  Called as optimizing
  Simpler to implement

• Horizontal Scaling :
  Adding more servers to a system to distribute the workload
  Complex to implement

• Microservice Architecture :
  Structures application as a collection of small, independently deployable and loosely coupled services.
  Here loosely coupled means that the services have less dependency on eah other.

• Distributed Systems :
  Collection of independent, networked computers that act as a single system.

• Load Balancing :
  Process of distributing workloads, such as network traffic or computational tasks across a group of available resources to optimize resource usage and improve performance to ensure high availability of service or application.

• Decoupling :
  Principle that reduces inter-dependencies between system components, allowing them to function independently

• Logging and Metrics Calculations :
  Logs records discrete events and activities within a system.
  Metrics are quantifiable measurements that provide insights into health, performance and overall functionality of a system.

• High Level Design :
  High-Level Design (HLD) provides a broad High-Level Design (HLD) provides a broad overview of a system's architecture, defining major components and their interactions.

• Low Level Design :
   Low-Level Design (LLD) details the internal logic, algorithms, data structures, and specific implementation of each component to guide developers in building the system. 
